#!/usr/bin/env bash

# This script packages the helm chart, with a values.yaml that has been modified
# to contain image tags as passed via environment variables.  The variables are
# named TAG_FILE_xxx where xxx is the image (e.g. TAG_FILE_LOGGREGATOR_BRIDGE
# for the loggregator-bridge image), and points to a file that contains the tag
# to use.  Any options given are passed to `helm package`.

set -o errexit -o nounset -o pipefail

dir="$(mktemp -d)"
function cleanup() {
    rm -rf "${dir}"
}
trap cleanup EXIT

echo "Copying chart to temporary directory..."
cp -r chart/* "${dir}"

tag="$(git describe --tag --abbrev=0 || echo "0.0.0")"
commits="$(git rev-list --count --first-parent HEAD)"
time="$(date --utc +%s)"
hash="$(git log -1 --pretty=%h)"
extra=""

if [[ -n "${OVERRIDES:-}" ]] ; then
    echo "Applying values.yaml overrides..."
    echo "${OVERRIDES}" | erb > "${dir}/.overrides.yaml"
    ruby bin/merge-yaml.rb chart/values.yaml "${dir}/.overrides.yaml" "${dir}/values.yaml"
    extra=".$(sha256sum "${dir}/.overrides.yaml" | head -c 8)"
    rm "${dir}/.overrides.yaml"
fi
version="${tag#v}-${commits}.${time}+g${hash}${extra}"

# Save information for the concourse pipeline, if requested.
if [[ -n "${VERSION_FILE:-}" ]] ; then
    echo "${version}" > "${VERSION_FILE}"
fi
if [[ -n "${COMMIT_HASH_FILE:-}" ]] ; then
    echo "${hash}" > "${COMMIT_HASH_FILE}"
fi

echo "Packaging chart..."
helm package "${dir}" --version="${version}" "${@}"
