#!/usr/bin/env bash

# This script packages the helm chart, with a values.yaml that has been modified
# by merging with the YAML file contained in the environment variable named
# `OVERRIDE`.  If the variable `OUTPUT_DIR` is set, the helm chart is output
# into that directory.  Any options are given to passed to `helm package`.

set -o errexit -o nounset -o pipefail

dir="$(mktemp -d)"
function cleanup() {
    rm -rf "${dir}"
}
trap cleanup EXIT

echo "Copying chart to temporary directory..."
cp -r chart/* "${dir}"

echo ".output" >> "${dir}/.helmignore"

tag="$(git describe --tag --abbrev=0 --exclude '*+g*' || echo "0.0.0")"
commits="$(git rev-list --count --first-parent HEAD)"
hash="$(git log -1 --pretty=%h)"
time="$(date +%s)"
extra=""

if [[ -n "${OVERRIDES:-}" ]] ; then
    echo "Applying values.yaml overrides..."
    echo "${OVERRIDES}" | erb > "${dir}/.overrides.yaml"
    ruby bin/merge-yaml.rb chart/values.yaml "${dir}/.overrides.yaml" "${dir}/values.yaml"
    extra=".$(sha256sum "${dir}/.overrides.yaml" | head -c 8)"
    rm "${dir}/.overrides.yaml"
fi
version="${tag#v}-${commits}+g${hash}"

filename="eirini-extensions-${tag#v}-${commits}-${time}+g${hash}${extra}.tgz"

# Save information for the concourse pipeline, if requested.
if [[ -n "${VERSION_FILE:-}" ]] ; then
    echo -n "${version}" > "${VERSION_FILE}"
fi
if [[ -n "${COMMIT_HASH_FILE:-}" ]] ; then
    git log -1 --pretty=%H | tr -d '\n' > "${COMMIT_HASH_FILE}"
fi

echo "Packaging chart..."
mkdir -p "${dir}/.output"
helm package "${dir}" "${@}" --version="${version}" --destination="${dir}/.output/"
mv "${dir}/.output/eirini-extensions-${version}.tgz" "${OUTPUT_DIR:-.}/${filename}"

if [ -n "${OUTPUT_DIR:-}" ] ; then
    # For CI builds, we want a body text that changes every time so that the
    # helm chart repository will get updated
    echo "Automated release ${filename}" > "${OUTPUT_DIR}/body.txt"
fi
